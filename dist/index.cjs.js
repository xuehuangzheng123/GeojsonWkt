"use strict";function e(e){try{var o=e.match(/^[A-Z]+(?=\()/)[0],t=void 0;if("POINT"===o)t={type:"Point",coordinates:(n=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g))[0].split(" ").map(Number)};else if("LINESTRING"===o){var n=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g),r=[];null==n||n.forEach((function(e){r.push(e.split(" ").map(Number))})),t={type:"LineString",coordinates:r}}else if("MULTIPOINT"===o){n=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g);var a=[];null==n||n.forEach((function(e){a.push(e.split(" ").map(Number))})),t={type:"MultiPoint",coordinates:a}}else if("POLYGON"===o){var c=e.split("),("),i=[];c.forEach((function(e){var o=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g),t=[];null==o||o.forEach((function(e){t.push(e.split(" ").map(Number))})),i.push(t)})),t={type:"Polygon",coordinates:i}}else if("MULTILINESTRING"===o){c=e.split("),(");var s=[];c.forEach((function(e){var o=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g),t=[];null==o||o.forEach((function(e){t.push(e.split(" ").map(Number))})),s.push(t)})),t={type:"MultiLineString",coordinates:s}}else if("MULTIPOLYGON"===o){var l=e.split(/,(?=\(\()/),u=[];l.forEach((function(e){var o=e.split(/,(?=\()/);console.log(o);var t=[];o.forEach((function(e){var o=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g),n=[];null==o||o.forEach((function(e){n.push(e.split(" ").map(Number))})),t.push(n)})),u.push(t)})),t={type:"MultiPolygon",coordinates:u}}return t}catch(e){console.log("格式解析出错",e)}}function o(e){var o=e.type,t=e.coordinates,n=[];switch(o.toUpperCase()){case"POINT":n.push(t.slice(0,2).join(" "));break;case"LINESTRING":case"MULTIPOINT":t.forEach((function(e){e instanceof Array&&n.push(e.slice(0,2).join(" "))}));break;case"POLYGON":case"MULTILINESTRING":t.forEach((function(e){var o=[];e instanceof Array&&e.forEach((function(e){e instanceof Array&&o.push(e.slice(0,2).join(" "))})),n.push("(".concat(o.join(","),")"))}));break;case"MULTIPOLYGON":t.forEach((function(e){var o=[];e instanceof Array&&e.forEach((function(e){var t=[];e instanceof Array&&e.forEach((function(e){e instanceof Array&&t.push(e.slice(0,2).join(" "))})),o.push("(".concat(t.join(","),")"))})),n.push("(".concat(o.join(","),")"))}))}return"".concat(o.toUpperCase(),"(").concat(n.join(","),")")}exports.geojsonToWkt=function(e){var t,n;if(["POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON"].includes(e.type.toUpperCase()))return o(e);if("FEATURE"===e.type.toUpperCase())return o(e.geometry);if("GEOMETRYCOLLECTION"===e.type.toUpperCase()){var r=[];return null===(t=e.geometries)||void 0===t||t.forEach((function(e){r.push(o(e))})),"GEOMETRYCOLLECTION(".concat(r.join(","),")")}if("FEATURECOLLECTION"===e.type.toUpperCase()){var a=[];return null===(n=e.features)||void 0===n||n.forEach((function(e){a.push(o(e.geometry))})),"GEOMETRYCOLLECTION(".concat(a.join(","),")")}console.log("geojson没有type")},exports.wktToGeojson=function(o){try{var t=(o=o.replaceAll("\n","").replaceAll("  ","").replaceAll(" ,",",").replaceAll(", ",",").replaceAll(" (","(").replaceAll("( ","(").replaceAll(" )",")").replaceAll(") ",")")).match(/^[A-Z]+(?=\()/)[0];if(["POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON"].includes(t))return{type:"Feature",geometry:e(o)};if("GEOMETRYCOLLECTION"===t){var n=(o=o.substring(19,o.length-1)).split(/,(?=[A-Z]+)/),r=[];return n.forEach((function(o){r.push({type:"Feature",geometry:e(o)})})),{type:"FeatureCollection",features:r}}}catch(e){console.log("格式解析出错",e)}};
