function e(e){try{var t=e.match(/^[A-Z]+(?=\()/)[0],o=void 0;if("POINT"===t)o={type:"Point",coordinates:(n=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g))[0].split(" ").map(Number)};else if("LINESTRING"===t){var n=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g),r=[];null==n||n.forEach((function(e){r.push(e.split(" ").map(Number))})),o={type:"LineString",coordinates:r}}else if("MULTIPOINT"===t){n=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g);var a=[];null==n||n.forEach((function(e){a.push(e.split(" ").map(Number))})),o={type:"MultiPoint",coordinates:a}}else if("POLYGON"===t){var c=e.split(/,(?=\()/),i=[];c.forEach((function(e){var t=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g),o=[];null==t||t.forEach((function(e){o.push(e.split(" ").map(Number))})),i.push(o)})),o={type:"Polygon",coordinates:i}}else if("MULTILINESTRING"===t){c=e.split(/,(?=\()/);var s=[];c.forEach((function(e){var t=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g),o=[];null==t||t.forEach((function(e){o.push(e.split(" ").map(Number))})),s.push(o)})),o={type:"MultiLineString",coordinates:s}}else if("MULTIPOLYGON"===t){var l=e.split(/,(?=\(\()/),u=[];l.forEach((function(e){var t=e.split(/,(?=\()/);console.log(t);var o=[];t.forEach((function(e){var t=e.match(/(-*\d+\.*\d*\s-*\d+\.*\d*)/g),n=[];null==t||t.forEach((function(e){n.push(e.split(" ").map(Number))})),o.push(n)})),u.push(o)})),o={type:"MultiPolygon",coordinates:u}}return o}catch(e){console.log("格式解析出错",e)}}function t(t){try{var o=(t=t.replaceAll("\n","").replaceAll("  ","").replaceAll(" ,",",").replaceAll(", ",",").replaceAll(" (","(").replaceAll("( ","(").replaceAll(" )",")").replaceAll(") ",")")).match(/^[A-Z]+(?=\()/)[0];if(["POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON"].includes(o))return{type:"Feature",geometry:e(t)};if("GEOMETRYCOLLECTION"===o){for(var n=(t=t.substring(19,t.length-1)).split(/,(?=[A-Z]+)/),r=[],a=0;a<n.length;a++){var c=e(n[a]);if(!c)return;r.push({type:"Feature",geometry:c})}return{type:"FeatureCollection",features:r}}}catch(e){console.log("格式解析出错",e)}}function o(e){var t=e.type,o=e.coordinates,n=[];switch(t.toUpperCase()){case"POINT":n.push(o.slice(0,2).join(" "));break;case"LINESTRING":case"MULTIPOINT":o.forEach((function(e){e instanceof Array&&n.push(e.slice(0,2).join(" "))}));break;case"POLYGON":case"MULTILINESTRING":o.forEach((function(e){var t=[];e instanceof Array&&e.forEach((function(e){e instanceof Array&&t.push(e.slice(0,2).join(" "))})),n.push("(".concat(t.join(","),")"))}));break;case"MULTIPOLYGON":o.forEach((function(e){var t=[];e instanceof Array&&e.forEach((function(e){var o=[];e instanceof Array&&e.forEach((function(e){e instanceof Array&&o.push(e.slice(0,2).join(" "))})),t.push("(".concat(o.join(","),")"))})),n.push("(".concat(t.join(","),")"))}))}return"".concat(t.toUpperCase(),"(").concat(n.join(","),")")}function n(e){var t,n;if(e){if(["POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON"].includes(e.type.toUpperCase()))return o(e);if("FEATURE"===e.type.toUpperCase())return o(e.geometry);if("GEOMETRYCOLLECTION"===e.type.toUpperCase()){var r=[];return null===(t=e.geometries)||void 0===t||t.forEach((function(e){r.push(o(e))})),"GEOMETRYCOLLECTION(".concat(r.join(","),")")}if("FEATURECOLLECTION"===e.type.toUpperCase()){var a=[];return null===(n=e.features)||void 0===n||n.forEach((function(e){a.push(o(e.geometry))})),"GEOMETRYCOLLECTION(".concat(a.join(","),")")}console.log("geojson没有type")}else console.log("没有数据")}export{n as geojsonToWkt,t as wktToGeojson};
